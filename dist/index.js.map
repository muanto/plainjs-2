{"version":3,"sources":["src/index.js"],"names":["logo","style","getRandomColor","template","document","createElement","innerHTML","styleSheet","CSSStyleSheet","replaceSync","BuzzLogo","HTMLElement","constructor","changeColor","color","rotateAndUpdate","dispatchEvent","CustomEvent","detail","attachShadow","mode","shadowRoot","adoptedStyleSheets","connectedCallback","appendChild","content","cloneNode","getElementById","onclick","update","attributeChangedCallback","name","oldValue","newValue","console","log","classList","add","setTimeout","remove","fill","customElements","define"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,MAAMC,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAjB;AAEAF,QAAQ,CAACG,SAAT;AAAqB;AAAW;AAChC,IAAIN,IAAK;AACT;AACA,EAHA;AAKA,MAAMO,UAAU,GAAG,IAAIC,aAAJ,EAAnB;AACAD,UAAU,CAACE,WAAX,CAAuBR,KAAvB;;AAEA,MAAMS,QAAN,SAAuBC,WAAvB,CAAmC;AACjCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAiBdC,WAjBc,GAiBF,MAAK;AACf,WAAKC,KAAL,GAAaZ,cAAc,EAA3B;AACA,WAAKa,eAAL;AACA,WAAKC,aAAL,CAAmB,IAAIC,WAAJ,CAAgB,cAAhB,EAAgC;AAAEC,QAAAA,MAAM,EAAE,KAAKJ;AAAf,OAAhC,CAAnB;AACD,KArBa;;AAEZ,SAAKA,KAAL,GAAa,WAAb;AACA,SAAKK,YAAL,CAAkB;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAlB;AACA,SAAKC,UAAL,CAAgBC,kBAAhB,GAAqC,CAACf,UAAD,CAArC;AACD;;AAEDgB,EAAAA,iBAAiB,GAAG;AAClB,SAAKF,UAAL,CAAgBG,WAAhB,CAA4BrB,QAAQ,CAACsB,OAAT,CAAiBC,SAAjB,CAA2B,IAA3B,CAA5B;AACA,SAAKL,UAAL,CAAgBM,cAAhB,CAA+B,KAA/B,EAAsCC,OAAtC,GAAgD,KAAKf,WAArD;AACA,SAAKgB,MAAL;AACD;;AAEDC,EAAAA,wBAAwB,CAACC,IAAD,EAAOC,QAAP,EAAiBC,QAAjB,EAA2B;AACjDC,IAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ;AACD;;AAQFpB,EAAAA,eAAe,GAAG;AACf,SAAKM,UAAL,CAAgBM,cAAhB,CAA+B,MAA/B,EAAuCS,SAAvC,CAAiDC,GAAjD,CAAqD,QAArD;AACAC,IAAAA,UAAU,CAAC,MAAI;AACb,WAAKT,MAAL;AACA,WAAKR,UAAL,CAAgBM,cAAhB,CAA+B,MAA/B,EAAuCS,SAAvC,CAAiDG,MAAjD,CAAwD,QAAxD;AACD,KAHS,EAGR,GAHQ,CAAV;AAID;;AAEDV,EAAAA,MAAM,GAAG;AACP,SAAKR,UAAL,CAAgBM,cAAhB,CAA+B,MAA/B,EAAuC1B,KAAvC,CAA6CuC,IAA7C,GAAoD,KAAK1B,KAAzD;AACD;;AAlCgC;;AAqCnC2B,cAAc,CAACC,MAAf,CAAsB,WAAtB,EAAmChC,QAAnC","sourceRoot":"/source_map/","sourcesContent":["import logo from './logo'\nimport style from './style';\nimport getRandomColor from './getRandomColor';\n\nconst template = document.createElement(\"template\");\n\ntemplate.innerHTML = /* html */`\n  ${logo}\n  <button id=\"btn\">Change color</button>\n `;\n \nconst styleSheet = new CSSStyleSheet();\nstyleSheet.replaceSync(style);\n\nclass BuzzLogo extends HTMLElement {\n  constructor() {\n    super();\n    this.color = 'lightgray';\n    this.attachShadow({ mode: \"open\" });\n    this.shadowRoot.adoptedStyleSheets = [styleSheet];\n  }\n\n  connectedCallback() {\n    this.shadowRoot.appendChild(template.content.cloneNode(true));\n    this.shadowRoot.getElementById(\"btn\").onclick = this.changeColor;\n    this.update();\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    console.log('Custom square element attributes changed.');\n  }\n\n  changeColor=() =>{\n    this.color = getRandomColor();\n    this.rotateAndUpdate()\n    this.dispatchEvent(new CustomEvent('colorChanged', { detail: this.color }));\n  }\n\n rotateAndUpdate() {\n    this.shadowRoot.getElementById(\"logo\").classList.add('rotate');\n    setTimeout(()=>{\n      this.update()\n      this.shadowRoot.getElementById(\"logo\").classList.remove('rotate');\n    },500) \n  }\n\n  update() {\n    this.shadowRoot.getElementById(\"logo\").style.fill = this.color;\n  }\n}\n\ncustomElements.define(\"buzz-logo\", BuzzLogo);\n"]}